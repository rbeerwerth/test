# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    paths-ignore: 
      - '.github/**'
      
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.8]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: setup dependencies
      shell: powershell
      run: |
        choco install boost-msvc-14.1
        $Env:Path += ";C:\msys64\usr\bin"
        cd ${{github.workspace}}
        mkdir deps
        wget http://apps.jcns.fz-juelich.de/src/WinLibs/libgsl.win64.zip -O ${{runner.temp}}\libgsl.zip
        7z x ${{runner.temp}}\libgsl.zip -odeps
        wget http://apps.jcns.fz-juelich.de/src/WinLibs/libtiff.win64.zip -O ${{runner.temp}}\libtiff.zip
        7z x ${{runner.temp}}\libtiff.zip -odeps
        wget http://apps.jcns.fz-juelich.de/src/WinLibs/libcblas.win64.zip -O ${{runner.temp}}\libcblas.zip
        7z x ${{runner.temp}}\libcblas.zip -odeps
        wget http://apps.jcns.fz-juelich.de/src/WinLibs/libfftw3.win64.zip -O ${{runner.temp}}\libfftw3.zip
        7z x ${{runner.temp}}\libfftw3.zip -odeps
        dir deps
        dir deps/include
        
    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools
        python -m pip install numpy scipy matplotlib
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.14.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2017_64'
        dir: '${{ github.workspace }}/qt5/'
        install-deps: 'true'
        modules: 'qtcharts qtwebengine'
        mirror: 'http://mirrors.ocf.berkeley.edu/qt/'
        cached: 'false'
        
    # use ccache for building BornAgain, might save time
    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")
        
    - name: ccache cache files for BornAgain
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: bornagain-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
        restore-keys: |
          bornagain-ccache-
          
    - name: Build BornAgain
      shell: cmd
      env:
        CCACHE_DIR: $GITHUB_WORKSPACE/.ccache
        CCACHE_COMPRESS: "true"
        CCACHE_COMPRESSLEVEL: "6"
        CCACHE_MAXSIZE: "400M"
      run: |
        set PATH=${{github.workspace}}\deps\lib;%PATH%
        set QTDIR=${{github.workspace}}\qt5\Qt\5.14.2\msvc2017_64
        set CMAKE_INC_PATH=${{github.workspace}}/deps/include
        echo %BOOST_ROOT%
        echo %QTDIR%
        echo %CMAKE_INC_PATH%
        cd ${{github.workspace}}
        git clone --recursive https://github.com/gpospelov/BornAgain.git
        cd BornAgain
        git checkout NoManhattan
        mkdir build
        cd build
        cmake -G "Visual Studio 16 2019"  -DCMAKE_INCLUDE_PATH=%CMAKE_INC_PATH% ..
        cmake --build . --config Release
        
    - name: Run unittest core
      shell: cmd
      if: failure()
      run: |
        echo %PATH%
        echo %QTDIR%
        bin\UnitTestCore.exe
          
    - name: Run unittest GUI
      shell: cmd
      if: failure()
      run: |
        echo %PATH%
        echo %QTDIR%
        bin\UnitTestGUI.exe
