# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.8]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: setup dependencies
      run: |
        brew install cmake fftw gsl boost qt5 libtiff ccache
        echo "Qt5 is installed to"
        echo $QTDIR
    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools
        python -m pip install numpy scipy matplotlib
        
    # use ccache for building BornAgain, might save time
    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")
        
    - name: ccache cache files for BornAgain
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: bornagain-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
        restore-keys: |
          bornagain-ccache-
          
    - name: Build BornAgain
      env:
        CCACHE_DIR: $GITHUB_WORKSPACE/.ccache
        CCACHE_COMPRESS: "true"
        CCACHE_COMPRESSLEVEL: "6"
        CCACHE_MAXSIZE: "400M"
        CXX: g++
        USE_CPP: 14
        CMAKE_CXX_STANDARD: 14
        PYTHON_VERSION: 3.8
        LLVM_BC_GENERATOR: /usr/bin/g++
        LDFLAGS: "-L/usr/local/opt/qt/lib"
        CPPFLAGS: "-I/usr/local/opt/qt/include"
      run: |
        echo 'export PATH="/usr/local/opt/qt/bin:$PATH"' >> /Users/runner/.bash_profile
        cd $HOME
        git clone https://github.com/rbeerwerth/BornAgain
        cd BornAgain
        git checkout test-mac
        git submodule update --init
        mkdir build && cd build
        cmake -DCMAKE_PREFIX_PATH=/usr/local/opt/qt -DBORNAGAIN_APPLE_BUNDLE=ON \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ../
        make -j4
        # print statistics for ccache
        ccache -s
        
    - name: Check
      shell: bash
      run: |
        cd $HOME/BornAgain/build
        bin/UnitTestNumeric
        ctest -j4
        
        
    - name: upload test logs
      uses: actions/upload-artifact@v2
      if: failure()
      with:
         name: LastTest.log
         path: /Users/runner/BornAgain/build/Testing/Temporary/LastTest.log
         
    #- name: Build package
      #env:
        #QTDIR: /usr/local/opt/qt
      #shell: bash
      #run: |
        #cd $HOME/BornAgain/build
        #echo $QTDIR
        #cpack -V
        
    #- name: upload package
      #uses: actions/upload-artifact@v2
      #if: success()
      #with:
         #name: BornAgain
         #path: /Users/runner/BornAgain/build/*.dmg

